{% set HAS_SSL = salt['file.directory_exists'](CERT_PATH) %}
server {
    listen 80;
    server_name {{WEBSITE["host"]}} {{WEBSITE["fullhost"]}};

    access_log /var/log/nginx/{{WEBSITE["host"]}}.letsencrypt.access.log combined;

    # Hit the exact letsencrypt endpoint
    include snippets/letsencrypt.conf;

    # OR Get rerouted to HTTPS endpoint
    location / {
        return 301 https://$host$request_uri;
    }
}

{% if HAS_SSL %}
server {
    listen {{WEBSITE["port"]}} ssl http2;
    server_name {{WEBSITE["host"]}} {{WEBSITE["fullhost"]}};

    access_log /var/log/nginx/{{WEBSITE["host"]}}.access.log;
    error_log /var/log/nginx/{{WEBSITE["host"]}}.error.log;

    ssl_certificate {{ CERT_PATH }}/fullchain.pem;
    ssl_certificate_key {{ CERT_PATH }}/privkey.pem;
    ssl_trusted_certificate {{ CERT_PATH }}/chain.pem;
    
    include snippets/ssl.conf;
    include snippets/letsencrypt.conf;

    # Reverse Proxy Forward
    location / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass {{WEBSITE["forward"]}};
    }

    # Redirect www Host Name to Short Host Name
    # return 301 https://{{WEBSITE["host"]}}$request_uri;
}
{% endif %}